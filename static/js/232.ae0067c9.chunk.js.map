{"version":3,"file":"static/js/232.ae0067c9.chunk.js","mappings":"sOAGaA,EAAUC,EAAAA,GAAAA,IAAU,8JAapBC,EAAOD,EAAAA,GAAAA,GAAS,0SAgBhBE,EAAOF,EAAAA,GAAAA,GAAS,kdAiBhBG,EAAMH,EAAAA,GAAAA,IAAU,8EAMhBI,EAAQJ,EAAAA,GAAAA,GAAS,0NAmBjBK,EAAcL,EAAAA,GAAAA,IAAU,4NAexBM,GAAUN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAY,yCAItBQ,EAAOR,EAAAA,GAAAA,EAAQ,qCACnB,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAM,I,2BCvFpB,SAASC,EAAW,GAAa,IAAXC,EAAM,EAANA,OAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACjB,EAAO,YACN,SAACE,EAAI,UACFa,EAAOG,KAAI,SAACH,EAAQI,GAAK,OACxB,SAAChB,EAAI,WACH,UAACI,EAAO,CAACa,GAAE,kBAAaL,EAAOM,IAAMC,MAAO,CAAEC,KAAMP,GAAW,WAC7D,SAACZ,EAAG,CACFoB,IACET,EAAOU,YAAW,0CACqBV,EAAOU,aAC1CC,EAENC,IAAKZ,EAAOa,SAEd,SAACvB,EAAK,UAAEU,EAAOa,SACf,UAACtB,EAAW,YACV,yCACgB,KACd,SAACG,EAAI,UAAEM,EAAOc,aAAed,EAAOc,aAAaC,QAAQ,GAAK,UAEhE,yCACc,SAACrB,EAAI,UAAEM,EAAOgB,uBAjBvBZ,EAqBJ,OAIX,SAAC,EAAAa,SAAQ,CAACC,UAAU,SAACC,EAAA,EAAM,IAAI,UAC7B,SAAC,KAAM,QAIf,C,+GC7BMC,EAAW,yCAAG,2GACKC,MAAM,GAAD,OAbhB,gCAa4B,6CAd1B,qCAc0E,KAAD,EAAzE,OAARC,EAAQ,gBACKA,EAASC,OAAO,KAAD,EAAxB,OAAJC,EAAI,yBAEHA,GAAI,2CACZ,kBALgB,mCAOjB,I,2BCpBavC,EAAUwC,EAAAA,GAAAA,IAAU,0CAIpBnC,EAAQmC,EAAAA,GAAAA,GAAS,gD,SCDf,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjC3B,EAAM,KAAE4B,EAAS,KAQxB,OANAC,EAAAA,EAAAA,YAAU,WACRC,IAAmBC,MAAK,YAAkB,IAAfC,EAAO,EAAPA,QACzBJ,EAAUI,EACZ,GACF,GAAG,KAGD,UAAC/C,EAAO,YACN,SAACK,EAAK,8BACN,SAACS,EAAA,EAAU,CAACC,OAAQA,MAG1B,C","sources":["components/MoviesList/MovieList.styles.jsx","components/MoviesList/MoviesList.jsx","services/api.jsx","pages/Pages.styles.jsx","pages/HomePage.jsx"],"sourcesContent":["import styles from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styles.div`\nmin-width: 320px;\n\n@media (min-width: 768px) {\n   min-width: 768px;\n}\n\n@media (min-width: 1200px) {\n  min-width: 1200px;\n}\n\n`;\n\nexport const List = styles.ul`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n\n  margin-bottom: -7px;\n  \n@media (min-width: 768px) {  \n    margin-right: -7px;\n    grid-template-columns: repeat(3, 1fr);\n}\n\n@media (min-width: 1200px) {\n    grid-template-columns: repeat(5, 1fr);\n}\n  `;\n\nexport const Item = styles.li`\n  list-style: none;\n  text-align: center;\n  margin-bottom: 7px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06), 1px 4px 6px rgba(0, 0, 0, 0.16);\n  transition: all 300ms linear; \n\n  @media (min-width: 768px) { \n    margin-right: 7px;\n  }\n\n&:hover {\n  scale: 1.01;\n  box-shadow: 0px 1px 1px rgba(200, 101, 247, 0.22), 0px 4px 4px rgba(200, 101, 247, 0.16), 1px 4px 6px rgba(200, 101, 247, 0.26);\n}\n`;\n\nexport const Img = styles.img`\nmargin-bottom: 10px;\nmin-width: 100%;\nheight: 80%;\n`;\n\nexport const Title = styles.h2`\n  font-size: 48px;\n  margin-bottom: 10px;\n\n\n  @media (min-width: 768px) { \n  font-size: 20px;\n  }\n\n  @media (min-width: 1200px) { \n\n    height: 60px;\n\n    font-size: 28px;\n  }\n\n\n`;\n\nexport const VoteWrapper = styles.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around; \n  font-size: 24px;\n\n @media (min-width: 768px) { \n  font-size: 14px;\n  }\n\n   @media (min-width: 1200px) { \n\n  }\n`;\n\nexport const LinkNav = styles(Link)`\ncolor: inherit;\n`;\n\nexport const Vote = styles.b`\ncolor: ${p => p.theme.colors.accent};\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Wrapper, List, Item, Img, Title, VoteWrapper, LinkNav, Vote } from './MovieList.styles';\nimport noPoster from 'utilits/img/No_Poster.png';\nimport Loader from 'components/Loader';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n      <List>\n        {movies.map((movies, index) => (\n          <Item key={index}>\n            <LinkNav to={`/movies/${movies.id}`} state={{ from: location }}>\n              <Img\n                src={\n                  movies.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movies.poster_path}`\n                    : noPoster\n                }\n                alt={movies.title}\n              />\n              <Title>{movies.title}</Title>\n              <VoteWrapper>\n                <p>\n                  vote average:{' '}\n                  <Vote>{movies.vote_average ? movies.vote_average.toFixed(1) : '-'}</Vote>\n                </p>\n                <p>\n                  vote count: <Vote>{movies.vote_count}</Vote>\n                </p>\n              </VoteWrapper>\n            </LinkNav>\n          </Item>\n        ))}\n      </List>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Wrapper>\n  );\n}\n\nMoviesList.propTypes = {\n  index: PropTypes.string,\n  movies: PropTypes.array,\n};\n","// import axios from 'axios';\n\nconst API_KEY = '8562b39677dad16e2334fc338fdc606e';\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n\n\n\n// export default async function getTranding() {\n//   const {\n//     data: { results },\n//   } = await axios.get(`/trending/movie/day?page=1&api_key=${API_KEY}`);\n\n//   return results;\n// }\n\nconst getTranding = async () => {\n  const response = await fetch(`${BASE_URL}trending/movie/day?page=1&api_key=${API_KEY}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport default getTranding;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n`;\n","import { useState, useEffect } from 'react';\nimport getTrandingMovie from 'services/api';\nimport MoviesList from 'components/MoviesList';\nimport { Wrapper, Title } from 'pages/Pages.styles';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrandingMovie().then(({ results }) => {\n      setMovies(results);\n    });\n  }, []);\n\n  return (\n    <Wrapper>\n      <Title>Trending Today</Title>\n      <MoviesList movies={movies} />\n    </Wrapper>\n  );\n}\n"],"names":["Wrapper","styles","List","Item","Img","Title","VoteWrapper","LinkNav","Link","Vote","p","theme","colors","accent","MoviesList","movies","location","useLocation","map","index","to","id","state","from","src","poster_path","noPoster","alt","title","vote_average","toFixed","vote_count","Suspense","fallback","Loader","getTranding","fetch","response","json","data","styled","HomePage","useState","setMovies","useEffect","getTrandingMovie","then","results"],"sourceRoot":""}