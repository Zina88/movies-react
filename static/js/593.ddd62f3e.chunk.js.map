{"version":3,"file":"static/js/593.ddd62f3e.chunk.js","mappings":"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","sources":["services/getMovieDetails.jsx","components/MovieDetailsList/MovieDetailsList.styled.jsx","components/MovieDetailsList/MovieDetailsList.jsx","pages/MovieDetails.jsx"],"sourcesContent":["const API_KEY = '8562b39677dad16e2334fc338fdc606e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovieDetails = async moviesId => {\n\tconst response = await fetch(`${BASE_URL}movie/${moviesId}?api_key=${API_KEY}&language=en-US`);\n\tconst data = await response.json();\n\n\treturn data;\n};\n\nexport default getMovieDetails;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { TbPlaylistAdd } from 'react-icons/tb';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n\nexport const ImgWrapper = styled.div`\n\t@media (min-width: 768px) {\n\t\tmargin-right: 15px;\n\t}\n`;\n\nexport const Img = styled.img`\n\ttransition: all 300ms linear;\n\twidth: 100%;\n\n\t&:hover {\n\t\tscale: 1.02;\n\t\tbox-shadow: ${p => p.theme.boxShadow.accent};\n\t}\n`;\n\nexport const Wrapper = styled.div`\n\tpadding: 15px;\n\tborder-bottom: 2px double ${p => p.theme.colors.accent};\n\n\t@media (min-width: 768px) {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 400px 1fr;\n\t\tmin-width: 768px;\n\t}\n`;\n\nexport const Title = styled.h2`\n\tcolor: ${p => p.theme.colors.accent};\n\tfont-size: 42px;\n\tmargin-bottom: 15px;\n`;\n\nexport const Release = styled.p`\n\tfont-size: 18px;\n\tmargin-bottom: 15px;\n`;\n\nexport const Genres = styled.ul`\n\tmargin-bottom: 15px;\n`;\n\nexport const Item = styled.li`\n\tmargin-left: 30px;\n\tlist-style: square;\n`;\n\nexport const Vote = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: 170px 170px;\n\tmargin-bottom: 15px;\n`;\n\nexport const WrapperNav = styled.div`\n\tborder-bottom: 1px solid #ccc;\n\tpadding: 15px;\n\n\t@media screen(min-width: 768px) {\n\t\tpadding-bottom: 15px;\n\t\tpadding-left: 15px;\n\t}\n`;\n\nexport const CustomList = styled.ul`\n\t@media (max-width: 767px) {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t}\n`;\nexport const CustomItem = styled.li``;\n\nexport const CustomLink = styled(NavLink)`\n\tdisplay: flex;\n\talign-items: center;\n\n\ttext-decoration: none;\n\ttransition: all 300ms linear;\n\tcolor: inherit;\n\tfont-size: 20px;\n\n\t&.active {\n\t\tcolor: ${p => p.theme.colors.accent};\n\t\tborder-radius: 10px;\n\t}\n`;\n\nexport const CustLogo = styled(TbPlaylistAdd)`\n\tmargin-right: 7px;\n\twidth: 25px;\n\theight: 25px;\n`;\n\nexport const WrapperBtn = styled.div`\n\tpadding: 15px 15px 55px 15px;\n`;\n\nexport const Back = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tbackground-color: transparent;\n\tcolor: ${p => p.theme.colors.accent};\n\tborder: 1px solid ${p => p.theme.colors.accent};\n\tpadding: 5px 15px 5px 10px;\n\tborder-radius: 3px;\n\ttransition: all 250ms linear;\n\n\t&:active,\n\t&:hover {\n\t\tbackground-color: ${p => p.theme.colors.accent};\n\t\tcolor: white;\n\t\tborder: 1px solid ${p => p.theme.colors.accent};\n\t}\n`;\n\nexport const BackLogo = styled(TiArrowBackOutline)`\n\tmargin-right: 7px;\n\twidth: 15px;\n\theight: 15px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport {\n  ImgWrapper,\n  Img,\n  Wrapper,\n  Title,\n  Release,\n  Genres,\n  Item,\n  Vote,\n  WrapperBtn,\n  Back,\n  BackLogo,\n  CustomLink,\n  WrapperNav,\n  CustLogo,\n  CustomList,\n  CustomItem,\n} from './MovieDetailsList.styled';\nimport noPoster from 'utilits/img/No_Poster.png';\nimport PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader';\n\nexport default function MovieDetailsList({ movie }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { original_title, genres, overview, poster_path, release_date, vote_average, vote_count } =\n    movie;\n\n  const back = () => navigate(location?.state?.from ?? '/');\n\n  return (\n    <div>\n      <WrapperBtn>\n        <Back type=\"button\" onClick={back}>\n          <BackLogo />\n          Back\n        </Back>\n      </WrapperBtn>\n\n      <Wrapper>\n        <ImgWrapper>\n          <Img\n            src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : noPoster}\n            alt={original_title}\n          />\n        </ImgWrapper>\n        <div>\n          <Title> {original_title}</Title>\n          <Release>\n            Data release: <b>{release_date}</b>\n          </Release>\n          <Vote>\n            <p>\n              Vote Average: <b>{vote_average ? vote_average.toFixed(1) : '-'}</b>\n            </p>\n            <p>\n              Vote Count: <b>{vote_count}</b>\n            </p>\n          </Vote>\n          <Genres>\n            Genres: {genres && genres.map(({ id, name }) => <Item key={id}>{name}</Item>)}\n          </Genres>\n          <p>\n            <b>Overview:</b> <br />\n            {overview}\n          </p>\n        </div>\n      </Wrapper>\n\n      <WrapperNav>\n        <CustomList>\n          <CustomItem>\n            <CustomLink to=\"cast\">\n              <CustLogo />\n              Cast\n            </CustomLink>\n          </CustomItem>\n          <CustomItem>\n            <CustomLink to=\"reviews\">\n              <CustLogo />\n              Reviews\n            </CustomLink>\n          </CustomItem>\n          <CustomItem>\n            <CustomLink to=\"trailer\">\n              <CustLogo />\n              Trailer\n            </CustomLink>\n          </CustomItem>\n        </CustomList>\n      </WrapperNav>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nMovieDetailsList.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }),\n    ),\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  }),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport getMovieDetails from 'services/getMovieDetails';\nimport MovieDetailsList from 'components/MovieDetailsList';\n\nexport default function MovieDetails() {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(moviesId).then(setMovie);\n  }, [moviesId]);\n\n  return <>{movie && <MovieDetailsList movie={movie} />}</>;\n}\n"],"names":["getMovieDetails","moviesId","fetch","response","json","data","ImgWrapper","styled","Img","p","theme","boxShadow","accent","Wrapper","colors","Title","Release","Genres","Item","Vote","WrapperNav","CustomList","CustomItem","CustomLink","NavLink","CustLogo","TbPlaylistAdd","WrapperBtn","Back","BackLogo","TiArrowBackOutline","MovieDetailsList","movie","navigate","useNavigate","location","useLocation","original_title","genres","overview","poster_path","release_date","vote_average","vote_count","type","onClick","state","from","src","noPoster","alt","toFixed","map","id","name","to","Suspense","fallback","Loader","MovieDetails","useParams","useState","setMovie","useEffect","then"],"sourceRoot":""}