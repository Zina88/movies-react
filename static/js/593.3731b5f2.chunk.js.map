{"version":3,"file":"static/js/593.3731b5f2.chunk.js","mappings":"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","sources":["hooks/useLocalStorage.js","services/getMovieDetails.jsx","components/MovieDetailsList/MovieDetailsList.styled.jsx","components/MovieDetailsList/MovieDetailsList.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n\tconst [state, setState] = useState(() => {\n\t\treturn JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n\t});\n\n\tuseEffect(() => {\n\t\twindow.localStorage.setItem(key, JSON.stringify(state));\n\t}, [key, state]);\n\n\treturn [state, setState];\n}\n","const API_KEY = '8562b39677dad16e2334fc338fdc606e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getMovieDetails = async moviesId => {\n\tconst response = await fetch(`${BASE_URL}movie/${moviesId}?api_key=${API_KEY}&language=en-US`);\n\tconst data = await response.json();\n\n\treturn data;\n};\n\nexport default getMovieDetails;\n","import styles from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { TbPlaylistAdd } from 'react-icons/tb';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n\nexport const ImgWrapper = styles.div`\n\t@media (min-width: 768px) {\n\t\tmargin-right: 15px;\n\t}\n`;\n\nexport const Img = styles.img`\n\ttransition: all 300ms linear;\n\twidth: 100%;\n\n\t&:hover {\n\t\tscale: 1.02;\n\t\tbox-shadow: ${p => p.theme.boxShadow.accent};\n\t}\n`;\n\nexport const Wrapper = styles.div`\n\tpadding: 15px;\n\tborder-bottom: 2px double ${p => p.theme.colors.accent};\n\tposition: relative;\n\n\t@media (min-width: 768px) {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 400px 1fr;\n\t\tmin-width: 768px;\n\t}\n`;\n\nexport const Title = styles.h2`\n\tcolor: ${p => p.theme.colors.accent};\n\tfont-size: 42px;\n\tmargin-bottom: 15px;\n`;\n\nexport const Release = styles.p`\n\tfont-size: 18px;\n\tmargin-bottom: 15px;\n`;\n\nexport const Genres = styles.ul`\n\tmargin-bottom: 15px;\n`;\n\nexport const Item = styles.li`\n\tmargin-left: 30px;\n\tlist-style: square;\n`;\n\nexport const Vote = styles.div`\n\tdisplay: grid;\n\tgrid-template-columns: 170px 170px;\n\tmargin-bottom: 15px;\n`;\n\nexport const WrapperNav = styles.div`\n\tborder-bottom: 1px solid #ccc;\n\tpadding: 15px;\n\n\t@media screen(min-width: 768px) {\n\t\tpadding-bottom: 15px;\n\t\tpadding-left: 15px;\n\t}\n`;\n\nexport const CustomList = styles.ul`\n\t@media (max-width: 767px) {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t}\n`;\nexport const CustomItem = styles.li``;\n\nexport const CustomLink = styles(NavLink)`\n\tdisplay: flex;\n\talign-items: center;\n\n\ttext-decoration: none;\n\ttransition: all 300ms linear;\n\tcolor: inherit;\n\tfont-size: 20px;\n\n\t&.active {\n\t\tcolor: ${p => p.theme.colors.accent};\n\t\tborder-radius: 10px;\n\t}\n`;\n\nexport const CustLogo = styles(TbPlaylistAdd)`\n\tmargin-right: 7px;\n\twidth: 25px;\n\theight: 25px;\n`;\n\nexport const WrapperBtn = styles.div`\n\tpadding: 115px 15px 0 15px;\n`;\n\nexport const Back = styles.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tbackground-color: transparent;\n\tcolor: ${p => p.theme.colors.accent};\n\tborder: 1px solid ${p => p.theme.colors.accent};\n\tpadding: 5px 15px 5px 10px;\n\tborder-radius: 3px;\n\ttransition: all 250ms linear;\n\n\t&:active,\n\t&:hover {\n\t\tbackground-color: ${p => p.theme.colors.accent};\n\t\tcolor: white;\n\t\tborder: 1px solid ${p => p.theme.colors.accent};\n\t}\n`;\n\nexport const BackLogo = styles(TiArrowBackOutline)`\n\tmargin-right: 7px;\n\twidth: 15px;\n\theight: 15px;\n`;\n\nexport const Overview = styles.p`\npadding-bottom: 40px;\n`;\n\nexport const Favourites = styles.button`\n\tposition: absolute;\n\tbottom: 15px;\n\tright: 15px;\n\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tbackground-color: transparent;\n\tcolor: ${p => p.theme.colors.accent};\n\tborder: 1px solid ${p => p.theme.colors.accent};\n\tpadding: 5px 15px 5px 10px;\n\tborder-radius: 3px;\n\ttransition: all 250ms linear;\n\n\t&:active,\n\t&:hover {\n\t\tbackground-color: ${p => p.theme.colors.accent};\n\t\tcolor: white;\n\t\tborder: 1px solid ${p => p.theme.colors.accent};\n\t}`;\n","import { Outlet } from 'react-router-dom';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport {\n\tImgWrapper,\n\tImg,\n\tWrapper,\n\tTitle,\n\tRelease,\n\tGenres,\n\tItem,\n\tVote,\n\tWrapperBtn,\n\tBack,\n\tBackLogo,\n\tCustomLink,\n\tWrapperNav,\n\tCustLogo,\n\tCustomList,\n\tCustomItem,\n\tOverview,\n\tFavourites,\n} from './MovieDetailsList.styled';\nimport noPoster from 'utilits/img/No_Poster.png';\nimport PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader';\n\nexport default function MovieDetailsList({ movie, handleFavouriteClick, children }) {\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\n\tconst { original_title, genres, overview, poster_path, release_date, vote_average, vote_count } =\n\t\tmovie;\n\n\tconst back = () => navigate(location?.state?.from ?? '/');\n\n\treturn (\n\t\t<div>\n\t\t\t<WrapperBtn>\n\t\t\t\t<Back type=\"button\" onClick={back}>\n\t\t\t\t\t<BackLogo />\n\t\t\t\t\tBack\n\t\t\t\t</Back>\n\t\t\t</WrapperBtn>\n\n\t\t\t<Wrapper>\n\t\t\t\t<ImgWrapper>\n\t\t\t\t\t<Img\n\t\t\t\t\t\tsrc={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : noPoster}\n\t\t\t\t\t\talt={original_title}\n\t\t\t\t\t/>\n\t\t\t\t</ImgWrapper>\n\t\t\t\t<div>\n\t\t\t\t\t<Title> {original_title}</Title>\n\t\t\t\t\t<Release>\n\t\t\t\t\t\tData release: <b>{release_date}</b>\n\t\t\t\t\t</Release>\n\t\t\t\t\t<Vote>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tVote Average: <b>{vote_average ? vote_average.toFixed(1) : '-'}</b>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tVote Count: <b>{vote_count}</b>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Vote>\n\t\t\t\t\t<Genres>\n\t\t\t\t\t\tGenres: {genres && genres.map(({ id, name }) => <Item key={id}>{name}</Item>)}\n\t\t\t\t\t</Genres>\n\t\t\t\t\t<Overview>\n\t\t\t\t\t\t<b>Overview:</b> <br />\n\t\t\t\t\t\t{overview}\n\t\t\t\t\t</Overview>\n\t\t\t\t\t<Favourites onClick={() => handleFavouriteClick(movie)}>{children}</Favourites>\n\t\t\t\t</div>\n\t\t\t</Wrapper>\n\n\t\t\t<WrapperNav>\n\t\t\t\t<CustomList>\n\t\t\t\t\t<CustomItem>\n\t\t\t\t\t\t<CustomLink to=\"cast\">\n\t\t\t\t\t\t\t<CustLogo />\n\t\t\t\t\t\t\tCast\n\t\t\t\t\t\t</CustomLink>\n\t\t\t\t\t</CustomItem>\n\t\t\t\t\t<CustomItem>\n\t\t\t\t\t\t<CustomLink to=\"reviews\">\n\t\t\t\t\t\t\t<CustLogo />\n\t\t\t\t\t\t\tReviews\n\t\t\t\t\t\t</CustomLink>\n\t\t\t\t\t</CustomItem>\n\t\t\t\t\t<CustomItem>\n\t\t\t\t\t\t<CustomLink to=\"trailer\">\n\t\t\t\t\t\t\t<CustLogo />\n\t\t\t\t\t\t\tTrailer\n\t\t\t\t\t\t</CustomLink>\n\t\t\t\t\t</CustomItem>\n\t\t\t\t</CustomList>\n\t\t\t</WrapperNav>\n\n\t\t\t<Suspense fallback={<Loader />}>\n\t\t\t\t<Outlet />\n\t\t\t</Suspense>\n\t\t</div>\n\t);\n}\n\nMovieDetailsList.propTypes = {\n\tmovie: PropTypes.shape({\n\t\toriginal_title: PropTypes.string,\n\t\tgenres: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tid: PropTypes.number,\n\t\t\t\tname: PropTypes.string,\n\t\t\t}),\n\t\t),\n\t\toverview: PropTypes.string,\n\t\tposter_path: PropTypes.string,\n\t\trelease_date: PropTypes.string,\n\t\tvote_average: PropTypes.number,\n\t\tvote_count: PropTypes.number,\n\t}),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport getMovieDetails from 'services/getMovieDetails';\nimport MovieDetailsList from 'components/MovieDetailsList';\n\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nexport default function MovieDetails() {\n\tconst { moviesId } = useParams();\n\tconst [movie, setMovie] = useState(null);\n\tconst [favourites, setFavourites] = useLocalStorage('movies', '');\n\n\tuseEffect(() => {\n\t\tgetMovieDetails(moviesId).then(setMovie);\n\t}, [moviesId]);\n\n\tconst addFavoriteMovie = movie => {\n\t\tif (!movie) {\n\t\t\treturn;\n\t\t}\n\t\tconst newFavouriteList = [...favourites, movie];\n\t\tsetFavourites(newFavouriteList);\n\t};\n\n\tconst removeFavouriteMovie = ({ id }) => {\n\t\tconst newFavouriteList = favourites.filter(favourite => favourite.id !== id);\n\t\tsetFavourites(newFavouriteList);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{movie && (\n\t\t\t\t<MovieDetailsList\n\t\t\t\t\tmovie={movie}\n\t\t\t\t\thandleFavouriteClick={\n\t\t\t\t\t\tfavourites.includes(movie) ? removeFavouriteMovie : addFavoriteMovie\n\t\t\t\t\t}\n\t\t\t\t\tchildren={favourites.includes(movie) ? 'Remove from favourites' : 'Add to favourites'}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n}\n"],"names":["useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","getMovieDetails","moviesId","fetch","response","json","data","ImgWrapper","styles","Img","p","theme","boxShadow","accent","Wrapper","colors","Title","Release","Genres","Item","Vote","WrapperNav","CustomList","CustomItem","CustomLink","NavLink","CustLogo","TbPlaylistAdd","WrapperBtn","Back","BackLogo","TiArrowBackOutline","Overview","Favourites","MovieDetailsList","movie","handleFavouriteClick","children","navigate","useNavigate","location","useLocation","original_title","genres","overview","poster_path","release_date","vote_average","vote_count","type","onClick","from","src","noPoster","alt","toFixed","map","id","name","to","Suspense","fallback","Loader","MovieDetails","useParams","setMovie","favourites","setFavourites","then","includes","newFavouriteList","filter","favourite"],"sourceRoot":""}